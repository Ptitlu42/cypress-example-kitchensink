name: Cypress Tests with Cucumber

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/base:latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress execution
        run: npx cypress verify

      - name: Start server and run standard e2e tests
        run: npm run test:ci:report
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug generated files
        run: |
          echo "=== Debug: Files generated after Cypress tests ==="
          echo "Full cypress directory tree:"
          find cypress -type f | sort || echo "No cypress directory"
          
          echo "=== Looking specifically for HTML reports ==="
          find . -name "*.html" -type f | grep -E "(cypress|mochawesome|report)" || echo "No HTML reports found"
          
          echo "=== Contents of cypress/reports if it exists ==="
          if [ -d cypress/reports ]; then
            ls -la cypress/reports/
            echo "File details:"
            for file in cypress/reports/*; do
              if [ -f "$file" ]; then
                echo "File: $file ($(wc -l < "$file") lines)"
              fi
            done
          else
            echo "cypress/reports directory does not exist"
          fi

      - name: Run Cucumber/Gherkin tests
        run: |
          echo "=== Running Cucumber tests ==="
          echo "Looking for feature files:"
          find cypress/e2e -name "*.feature" -type f || echo "No .feature files found"
          
          echo "Looking for step definitions:"
          find cypress/e2e -name "*step*.js" -type f || echo "No step definition files found"
          
          echo "Creating cucumber-json directory:"
          mkdir -p cypress/cucumber-json
          
          echo "Running Cypress with Cucumber (using configured preprocessor):"
          npx cypress run --spec "cypress/e2e/**/*.feature" || echo "Cucumber tests execution completed with errors"
          
          echo "Checking JSON results (looking for .cucumber.json files):"
          ls -la cypress/cucumber-json/ || echo "No cucumber-json directory"
          find cypress/cucumber-json -name "*.cucumber.json" 2>/dev/null || echo "No .cucumber.json files found"
          
          echo "JSON file contents (if any):"
          for file in cypress/cucumber-json/*.cucumber.json; do
            if [ -f "$file" ]; then
              echo "=== Content of $file ==="
              head -10 "$file" || echo "Cannot read file"
            fi
          done
          
          echo "Also checking for any JSON files:"
          for file in cypress/cucumber-json/*.json; do
            if [ -f "$file" ]; then
              echo "=== Content of $file ==="
              head -10 "$file" || echo "Cannot read file"
            fi
          done
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Cucumber HTML report
        run: |
          echo "=== Generating Cucumber HTML report ==="
          echo "Current directory contents:"
          ls -la
          
          echo "Cypress directory contents:"
          ls -la cypress/ || echo "No cypress directory"
          
          echo "Running report generation:"
          npm run generate:cucumber-report || echo "Report generation failed"
          
          echo "Checking generated reports:"
          ls -la cypress/reports/ || echo "No reports directory"
        continue-on-error: true

      - name: Create simple working report
        run: |
          echo "=== Creating merged report ==="
          mkdir -p cypress/reports
          
          echo "=== Checking what files were generated ==="
          echo "All cypress directory contents:"
          find cypress -type f -name "*.html" || echo "No HTML files found"
          find cypress -type f -name "*.json" || echo "No JSON files found"
          
          echo "Reports directory:"
          ls -la cypress/reports/ || echo "No reports directory"
          
          # Check if reports exist and copy with correct names
          CYPRESS_REPORT=""
          CUCUMBER_REPORT=""
          
          # Look for any mochawesome HTML files
          if [ -f "cypress/reports/mochawesome.html" ]; then
            echo "‚úÖ Found mochawesome.html"
            CYPRESS_REPORT="<iframe src='mochawesome.html' width='100%' height='600px' style='border:1px solid #ddd; border-radius:5px;'></iframe>"
          elif [ -f "cypress/reports/index.html" ]; then
            echo "‚úÖ Found index.html in reports - copying as mochawesome.html"
            cp cypress/reports/index.html cypress/reports/mochawesome.html
            CYPRESS_REPORT="<iframe src='mochawesome.html' width='100%' height='600px' style='border:1px solid #ddd; border-radius:5px;'></iframe>"
          else
            # Look for any HTML file in reports
            FIRST_HTML=$(find cypress/reports -name "*.html" -type f | head -1)
            if [ -n "$FIRST_HTML" ]; then
              echo "‚úÖ Found HTML report: $FIRST_HTML"
              cp "$FIRST_HTML" cypress/reports/mochawesome.html
              CYPRESS_REPORT="<iframe src='mochawesome.html' width='100%' height='600px' style='border:1px solid #ddd; border-radius:5px;'></iframe>"
            else
              echo "‚ùå No Cypress HTML report found"
              CYPRESS_REPORT="<p class='no-report'>No Cypress report available</p>"
            fi
          fi
          
          if [ -f "cypress/reports/cucumber-report.html" ]; then
            echo "‚úÖ Found cucumber-report.html"
            CUCUMBER_REPORT="<iframe src='cucumber-report.html' width='100%' height='600px' style='border:1px solid #ddd; border-radius:5px;'></iframe>"
          else
            echo "‚ùå No Cucumber HTML report found"
            CUCUMBER_REPORT="<p class='no-report'>No Cucumber report available</p>"
          fi
          
          # Create simple merged page
          cat > cypress/reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Reports Dashboard</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
                  .header { background: #2c3e50; color: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; text-align: center; }
                  .container { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
                  .report-section { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  .report-section h2 { color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px; margin-top: 0; }
                  .no-report { color: #7f8c8d; text-align: center; padding: 40px; font-style: italic; background: #f8f9fa; border-radius: 5px; }
                  .tabs { display: flex; background: #ecf0f1; border-radius: 5px; margin-bottom: 20px; }
                  .tab { flex: 1; padding: 15px; text-align: center; cursor: pointer; border-radius: 5px; transition: background 0.3s; }
                  .tab.active { background: #3498db; color: white; }
                  .tab:hover { background: #bdc3c7; }
                  .tab-content { display: none; }
                  .tab-content.active { display: block; }
                  @media (max-width: 768px) {
                      .container { grid-template-columns: 1fr; }
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üß™ Test Reports Dashboard</h1>
                  <p>Cypress & Cucumber Test Results</p>
              </div>
              
              <div class="tabs">
                  <div class="tab active" onclick="showTab('cypress')">üìä Cypress Tests</div>
                  <div class="tab" onclick="showTab('cucumber')">ü•í Cucumber Tests</div>
                  <div class="tab" onclick="showTab('both')">üìã Both Reports</div>
              </div>
              
              <div id="cypress" class="tab-content active">
                  <div class="report-section">
                      <h2>Cypress Test Report</h2>
          EOF
          
          echo "$CYPRESS_REPORT" >> cypress/reports/index.html
          
          cat >> cypress/reports/index.html << 'EOF'
                  </div>
              </div>
              
              <div id="cucumber" class="tab-content">
                  <div class="report-section">
                      <h2>Cucumber Test Report</h2>
          EOF
          
          echo "$CUCUMBER_REPORT" >> cypress/reports/index.html
          
          cat >> cypress/reports/index.html << 'EOF'
                  </div>
              </div>
              
              <div id="both" class="tab-content">
                  <div class="container">
                      <div class="report-section">
                          <h2>Cypress Tests</h2>
          EOF
          
          echo "$CYPRESS_REPORT" >> cypress/reports/index.html
          
          cat >> cypress/reports/index.html << 'EOF'
                      </div>
                      <div class="report-section">
                          <h2>Cucumber Tests</h2>
          EOF
          
          echo "$CUCUMBER_REPORT" >> cypress/reports/index.html
          
          cat >> cypress/reports/index.html << 'EOF'
                      </div>
                  </div>
              </div>
              
              <script>
                  function showTab(tabName) {
                      // Hide all tab contents
                      var contents = document.querySelectorAll('.tab-content');
                      contents.forEach(function(content) {
                          content.classList.remove('active');
                      });
                      
                      // Remove active class from all tabs
                      var tabs = document.querySelectorAll('.tab');
                      tabs.forEach(function(tab) {
                          tab.classList.remove('active');
                      });
                      
                      // Show selected tab content
                      document.getElementById(tabName).classList.add('active');
                      
                      // Add active class to clicked tab
                      event.target.classList.add('active');
                  }
              </script>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Merged report created"
          echo "Cypress report: $([ -f 'cypress/reports/mochawesome.html' ] && echo 'Found' || echo 'Not found')"
          echo "Cucumber report: $([ -f 'cypress/reports/cucumber-report.html' ] && echo 'Found' || echo 'Not found')"

      - name: Remove intermediate step
        run: echo "Single page report created successfully"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 30

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-reports
          path: cypress/reports
          retention-days: 30

      - name: Upload Cucumber reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-reports
          path: cypress/cucumber-json
          retention-days: 30

      - name: Prepare Pages content
        run: |
          echo "=== Preparing Pages content ==="
          mkdir -p pages-content
          
          # Ensure we have at least the main report
          if [ -f "cypress/reports/index.html" ]; then
            cp cypress/reports/index.html pages-content/
            echo "‚úÖ Main report copied"
          else
            echo "‚ùå No main report found, creating basic one"
            cat > pages-content/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Test Reports</title></head>
          <body>
            <h1>Cypress Tests</h1>
            <p>Test execution completed but no detailed reports were generated.</p>
          </body>
          </html>
          EOF
          fi
          
          # Copy other reports if they exist
          cp -r cypress/reports/* pages-content/ 2>/dev/null || echo "No additional reports to copy"
          cp -r cypress/screenshots pages-content/ 2>/dev/null || echo "No screenshots to copy"
          cp -r cypress/videos pages-content/ 2>/dev/null || echo "No videos to copy"
          cp -r cypress/cucumber-json pages-content/ 2>/dev/null || echo "No cucumber JSON to copy"
          
          echo "Pages content prepared:"
          ls -la pages-content/

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: always()

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          path: pages-content

  deploy:
    if: always()
    needs: cypress-tests
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 