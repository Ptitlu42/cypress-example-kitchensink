name: Cypress Tests with Cucumber

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/base:latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress execution
        run: npx cypress verify

      - name: Start server and run standard e2e tests
        run: npm run test:ci:report
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Cucumber/Gherkin tests
        run: |
          echo "=== Running Cucumber tests ==="
          echo "Looking for feature files:"
          find cypress/e2e -name "*.feature" -type f || echo "No .feature files found"
          
          echo "Looking for step definitions:"
          find cypress/e2e -name "*step*.js" -type f || echo "No step definition files found"
          
          echo "Creating cucumber-json directory:"
          mkdir -p cypress/cucumber-json
          
          echo "Running Cypress with Cucumber (using configured preprocessor):"
          npx cypress run --spec "cypress/e2e/**/*.feature" || echo "Cucumber tests execution completed with errors"
          
          echo "Checking JSON results (looking for .cucumber.json files):"
          ls -la cypress/cucumber-json/ || echo "No cucumber-json directory"
          find cypress/cucumber-json -name "*.cucumber.json" 2>/dev/null || echo "No .cucumber.json files found"
          
          echo "JSON file contents (if any):"
          for file in cypress/cucumber-json/*.cucumber.json; do
            if [ -f "$file" ]; then
              echo "=== Content of $file ==="
              head -10 "$file" || echo "Cannot read file"
            fi
          done
          
          echo "Also checking for any JSON files:"
          for file in cypress/cucumber-json/*.json; do
            if [ -f "$file" ]; then
              echo "=== Content of $file ==="
              head -10 "$file" || echo "Cannot read file"
            fi
          done
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Cucumber HTML report
        run: |
          echo "=== Generating Cucumber HTML report ==="
          echo "Current directory contents:"
          ls -la
          
          echo "Cypress directory contents:"
          ls -la cypress/ || echo "No cypress directory"
          
          echo "Running report generation:"
          npm run generate:cucumber-report || echo "Report generation failed"
          
          echo "Checking generated reports:"
          ls -la cypress/reports/ || echo "No reports directory"
        continue-on-error: true

      - name: Create simple working report
        run: |
          echo "=== Creating simple report ==="
          mkdir -p cypress/reports
          
          # Simple static report without complex variable substitution
          cat > cypress/reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Cypress Test Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
                  .header { background: #2c3e50; color: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
                  .section { background: white; margin: 20px 0; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  .section h2 { color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px; }
                  .status { padding: 10px; border-radius: 5px; margin: 10px 0; }
                  .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; }
                  .error { background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; }
                  .button { background: #3498db; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; margin: 5px; text-decoration: none; display: inline-block; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>🧪 Cypress Test Reports</h1>
                  <p>Test execution completed</p>
              </div>
              
              <div class="section">
                  <h2>📊 Test Results</h2>
                  <div id="test-status">
                      <p>Checking test results...</p>
                  </div>
              </div>
              
              <div class="section">
                  <h2>🔗 Available Reports</h2>
                  <div id="reports-list">
                      <p>Loading reports...</p>
                  </div>
              </div>
          </body>
          </html>
          EOF
          
          echo "Basic report created successfully"
          
          # Check what we have and add status
          if [ -f "cypress/reports/mochawesome.html" ]; then
            echo "✅ Mochawesome report found"
          fi
          
          if [ -f "cypress/reports/cucumber-report.html" ]; then
            echo "✅ Cucumber report found"
          fi
          
          if [ -d "cypress/cucumber-json" ] && [ "$(ls -A cypress/cucumber-json 2>/dev/null)" ]; then
            echo "✅ Cucumber JSON files found"
          fi
          
          echo "Report creation completed"

      - name: Remove intermediate step
        run: echo "Single page report created successfully"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 30

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-reports
          path: cypress/reports
          retention-days: 30

      - name: Upload Cucumber reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-reports
          path: cypress/cucumber-json
          retention-days: 30

      - name: Prepare Pages content
        run: |
          echo "=== Preparing Pages content ==="
          mkdir -p pages-content
          
          # Ensure we have at least the main report
          if [ -f "cypress/reports/index.html" ]; then
            cp cypress/reports/index.html pages-content/
            echo "✅ Main report copied"
          else
            echo "❌ No main report found, creating basic one"
            cat > pages-content/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Test Reports</title></head>
          <body>
            <h1>Cypress Tests</h1>
            <p>Test execution completed but no detailed reports were generated.</p>
          </body>
          </html>
          EOF
          fi
          
          # Copy other reports if they exist
          cp -r cypress/reports/* pages-content/ 2>/dev/null || echo "No additional reports to copy"
          cp -r cypress/screenshots pages-content/ 2>/dev/null || echo "No screenshots to copy"
          cp -r cypress/videos pages-content/ 2>/dev/null || echo "No videos to copy"
          cp -r cypress/cucumber-json pages-content/ 2>/dev/null || echo "No cucumber JSON to copy"
          
          echo "Pages content prepared:"
          ls -la pages-content/

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: always()

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          path: pages-content

  deploy:
    if: always()
    needs: cypress-tests
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 